"""
This type stub file was generated by pyright.
"""

from typing import Dict, List, Tuple, Union
from .._utils import StreamType
from ._base import ByteStringObject, TextStringObject

def hex_to_rgb(value: str) -> Tuple[float, float, float]:
    ...

def read_hex_string_from_stream(stream: StreamType, forced_encoding: Union[None, str, List[str], Dict[int, str]] = ...) -> Union[TextStringObject, ByteStringObject]:
    ...

__ESCAPE_DICT__ = ...
__BACKSLASH_CODE__ = ...
def read_string_from_stream(stream: StreamType, forced_encoding: Union[None, str, List[str], Dict[int, str]] = ...) -> Union[TextStringObject, ByteStringObject]:
    ...

def create_string_object(string: Union[str, bytes], forced_encoding: Union[None, str, List[str], Dict[int, str]] = ...) -> Union[TextStringObject, ByteStringObject]:
    """
    Create a ByteStringObject or a TextStringObject from a string to represent the string.

    Args:
        string: The data being used
        forced_encoding: Typically None, or an encoding string

    Returns:
        A ByteStringObject

    Raises:
        TypeError: If string is not of type str or bytes.

    """
    ...

def decode_pdfdocencoding(byte_array: bytes) -> str:
    ...

