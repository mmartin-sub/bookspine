"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Any, Dict, List, Union
from ._font import Font

"""A dataclass that captures the CTM and Text State for a tj operation"""
@dataclass
class TextStateParams:
    """
    Text state parameters and operator values for a single text value in a
    TJ or Tj PDF operation.

    Attributes:
        txt (str): the text to be rendered.
        font (Font): font object
        font_size (int | float): font size
        Tc (float): character spacing. Defaults to 0.0.
        Tw (float): word spacing. Defaults to 0.0.
        Tz (float): horizontal scaling. Defaults to 100.0.
        TL (float): leading, vertical displacement between text lines. Defaults to 0.0.
        Ts (float): text rise. Used for super/subscripts. Defaults to 0.0.
        transform (List[float]): effective transformation matrix.
        tx (float): x cood of rendered text, i.e. self.transform[4]
        ty (float): y cood of rendered text. May differ from self.transform[5] per self.Ts.
        displaced_tx (float): x coord immediately following rendered text
        space_tx (float): tx for a space character
        font_height (float): effective font height accounting for CTM
        flip_vertical (bool): True if y axis has been inverted (i.e. if self.transform[3] < 0.)
        rotated (bool): True if the text orientation is rotated with respect to the page.

    """
    txt: str
    font: Font
    font_size: Union[int, float]
    Tc: float = ...
    Tw: float = ...
    Tz: float = ...
    TL: float = ...
    Ts: float = ...
    transform: List[float] = ...
    tx: float = ...
    ty: float = ...
    displaced_tx: float = ...
    space_tx: float = ...
    font_height: float = ...
    flip_vertical: bool = ...
    rotated: bool = ...
    def __post_init__(self) -> None:
        ...

    def font_size_matrix(self) -> List[float]:
        """Font size matrix"""
        ...

    def displaced_transform(self) -> List[float]:
        """Effective transform matrix after text has been rendered."""
        ...

    def render_transform(self) -> List[float]:
        """Effective transform matrix accounting for font size, Tz, and Ts."""
        ...

    def displacement_matrix(self, word: Union[str, None] = ..., TD_offset: float = ...) -> List[float]:
        """
        Text displacement matrix

        Args:
            word (str, optional): Defaults to None in which case self.txt displacement is
                returned.
            TD_offset (float, optional): translation applied by TD operator. Defaults to 0.0.

        """
        ...

    def word_tx(self, word: str, TD_offset: float = ...) -> float:
        """Horizontal text displacement for any word according this text state"""
        ...

    @staticmethod
    def to_dict(inst: TextStateParams) -> Dict[str, Any]:
        """Dataclass to dict for json.dumps serialization"""
        ...
