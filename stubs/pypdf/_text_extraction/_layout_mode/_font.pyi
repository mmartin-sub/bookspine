"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Any, Dict, Union

"""Font constants and classes for "layout" mode text operations"""
@dataclass
class Font:
    """
    A font object formatted for use during "layout" mode text extraction

    Attributes:
        subtype (str): font subtype
        space_width (int | float): width of a space character
        encoding (str | Dict[int, str]): font encoding
        char_map (dict): character map
        font_dictionary (dict): font dictionary
        width_map (Dict[str, int]): mapping of characters to widths
        interpretable (bool): Default True. If False, the font glyphs cannot
            be translated to characters, e.g. Type3 fonts that do not define
            a '/ToUnicode' mapping.

    """
    subtype: str
    space_width: Union[int, float]
    encoding: Union[str, Dict[int, str]]
    char_map: Dict[Any, Any]
    font_dictionary: Dict[Any, Any]
    width_map: Dict[str, int] = ...
    interpretable: bool = ...
    def __post_init__(self) -> None:
        ...

    def word_width(self, word: str) -> float:
        """Sum of character widths specified in PDF font for the supplied word"""
        ...

    @staticmethod
    def to_dict(font_instance: Font) -> Dict[str, Any]:
        """Dataclass to dict for json.dumps serialization."""
        ...
