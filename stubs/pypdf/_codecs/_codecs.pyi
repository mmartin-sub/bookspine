"""
This type stub file was generated by pyright.
"""

from abc import ABC, abstractmethod

"""
This module is for codecs only.

While the codec implementation can contain details of the PDF specification,
the module should not do any PDF parsing.
"""
class Codec(ABC):
    """Abstract base class for all codecs."""
    @abstractmethod
    def encode(self, data: bytes) -> bytes:
        """
        Encode the input data.

        Args:
            data: Data to encode.

        Returns:
            Encoded data.

        """
        ...

    @abstractmethod
    def decode(self, data: bytes) -> bytes:
        """
        Decode the input data.

        Args:
            data: Data to decode.

        Returns:
            Decoded data.

        """
        ...



class LzwCodec(Codec):
    """Lempel-Ziv-Welch (LZW) adaptive compression codec."""
    CLEAR_TABLE_MARKER = ...
    EOD_MARKER = ...
    INITIAL_BITS_PER_CODE = ...
    MAX_BITS_PER_CODE = ...
    def encode(self, data: bytes) -> bytes:
        """
        Encode data using the LZW compression algorithm.

        Taken from PDF 1.7 specs, "7.4.4.2 Details of LZW Encoding".
        """
        ...

    def decode(self, data: bytes) -> bytes:
        """
        The following code was converted to Python from the following code:
        https://github.com/empira/PDFsharp/blob/master/src/foundation/src/PDFsharp/src/PdfSharp/Pdf.Filters/LzwDecode.cs
        """
        ...
