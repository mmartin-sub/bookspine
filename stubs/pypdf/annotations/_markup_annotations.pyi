"""
This type stub file was generated by pyright.
"""

import sys
from abc import ABC
from typing import Any, List, Optional, Tuple, TypeAlias, Union
from ..generic import ArrayObject
from ..generic._rectangle import RectangleObject
from ._base import AnnotationDictionary
from typing_extensions import TypeAlias

if sys.version_info[: 2] >= (3, 10):
    ...
else:
    ...
Vertex: TypeAlias = Tuple[float, float]
class MarkupAnnotation(AnnotationDictionary, ABC):
    """
    Base class for all markup annotations.

    Args:
        title_bar: Text to be displayed in the title bar of the annotation;
            by convention this is the name of the author

    """
    def __init__(self, *, title_bar: Optional[str] = ...) -> None:
        ...
    


class Text(MarkupAnnotation):
    """
    A text annotation.

    Args:
        rect: array of four integers ``[xLL, yLL, xUR, yUR]``
            specifying the clickable rectangular area
        text: The text that is added to the document
        open:
        flags:

    """
    def __init__(self, *, rect: Union[RectangleObject, Tuple[float, float, float, float]], text: str, open: bool = ..., flags: int = ..., **kwargs: Any) -> None:
        ...
    


class FreeText(MarkupAnnotation):
    """A FreeText annotation"""
    def __init__(self, *, text: str, rect: Union[RectangleObject, Tuple[float, float, float, float]], font: str = ..., bold: bool = ..., italic: bool = ..., font_size: str = ..., font_color: str = ..., border_color: Optional[str] = ..., background_color: Optional[str] = ..., **kwargs: Any) -> None:
        ...
    


class Line(MarkupAnnotation):
    def __init__(self, p1: Vertex, p2: Vertex, rect: Union[RectangleObject, Tuple[float, float, float, float]], text: str = ..., **kwargs: Any) -> None:
        ...
    


class PolyLine(MarkupAnnotation):
    def __init__(self, vertices: List[Vertex], **kwargs: Any) -> None:
        ...
    


class Rectangle(MarkupAnnotation):
    def __init__(self, rect: Union[RectangleObject, Tuple[float, float, float, float]], *, interior_color: Optional[str] = ..., **kwargs: Any) -> None:
        ...
    


class Highlight(MarkupAnnotation):
    def __init__(self, *, rect: Union[RectangleObject, Tuple[float, float, float, float]], quad_points: ArrayObject, highlight_color: str = ..., printing: bool = ..., **kwargs: Any) -> None:
        ...
    


class Ellipse(MarkupAnnotation):
    def __init__(self, rect: Union[RectangleObject, Tuple[float, float, float, float]], *, interior_color: Optional[str] = ..., **kwargs: Any) -> None:
        ...
    


class Polygon(MarkupAnnotation):
    def __init__(self, vertices: List[Tuple[float, float]], **kwargs: Any) -> None:
        ...
    


