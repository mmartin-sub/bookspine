"""
This type stub file was generated by pyright.
"""

from enum import Enum, IntFlag, unique
from typing import Dict, Tuple

"""Various constants, enums, and flags to aid readability."""
class StrEnum(str, Enum):
    def __str__(self) -> str:
        ...



class Core:
    """Keywords that don't quite belong anywhere else."""
    OUTLINES = ...
    THREADS = ...
    PAGE = ...
    PAGES = ...
    CATALOG = ...


class TrailerKeys:
    SIZE = ...
    PREV = ...
    ROOT = ...
    ENCRYPT = ...
    INFO = ...
    ID = ...


class CatalogAttributes:
    NAMES = ...
    DESTS = ...


class EncryptionDictAttributes:
    """
    Additional encryption dictionary entries for the standard security handler.

    Table 3.19, Page 122.
    Table 21 of the 2.0 manual.
    """
    R = ...
    O = ...
    U = ...
    P = ...
    ENCRYPT_METADATA = ...


class UserAccessPermissions(IntFlag):
    """
    Table 3.20 User access permissions.
    Table 22 of the 2.0 manual.
    """
    R1 = ...
    R2 = ...
    PRINT = ...
    MODIFY = ...
    EXTRACT = ...
    ADD_OR_MODIFY = ...
    R7 = ...
    R8 = ...
    FILL_FORM_FIELDS = ...
    EXTRACT_TEXT_AND_GRAPHICS = ...
    ASSEMBLE_DOC = ...
    PRINT_TO_REPRESENTATION = ...
    R13 = ...
    R14 = ...
    R15 = ...
    R16 = ...
    R17 = ...
    R18 = ...
    R19 = ...
    R20 = ...
    R21 = ...
    R22 = ...
    R23 = ...
    R24 = ...
    R25 = ...
    R26 = ...
    R27 = ...
    R28 = ...
    R29 = ...
    R30 = ...
    R31 = ...
    R32 = ...
    def to_dict(self) -> Dict[str, bool]:
        """Convert the given flag value to a corresponding verbose name mapping."""
        ...

    @classmethod
    def from_dict(cls, value: Dict[str, bool]) -> UserAccessPermissions:
        """Convert the verbose name mapping to the corresponding flag value."""
        ...

    @classmethod
    def all(cls) -> UserAccessPermissions:
        ...



class Resources:
    """
    Table 3.30 Entries in a resource dictionary.
    Table 34 in the 2.0 reference.
    """
    EXT_G_STATE = ...
    COLOR_SPACE = ...
    PATTERN = ...
    SHADING = ...
    XOBJECT = ...
    FONT = ...
    PROC_SET = ...
    PROPERTIES = ...


class Ressources:
    """
    Use :class: `Resources` instead.

    .. deprecated:: 5.0.0
    """
    ...


class PagesAttributes:
    """§7.7.3.2 of the 1.7 and 2.0 reference."""
    TYPE = ...
    PARENT = ...
    KIDS = ...
    COUNT = ...


class PageAttributes:
    """§7.7.3.3 of the 1.7 and 2.0 reference."""
    TYPE = ...
    PARENT = ...
    LAST_MODIFIED = ...
    RESOURCES = ...
    MEDIABOX = ...
    CROPBOX = ...
    BLEEDBOX = ...
    TRIMBOX = ...
    ARTBOX = ...
    BOX_COLOR_INFO = ...
    CONTENTS = ...
    ROTATE = ...
    GROUP = ...
    THUMB = ...
    B = ...
    DUR = ...
    TRANS = ...
    ANNOTS = ...
    AA = ...
    METADATA = ...
    PIECE_INFO = ...
    STRUCT_PARENTS = ...
    ID = ...
    PZ = ...
    SEPARATION_INFO = ...
    TABS = ...
    TEMPLATE_INSTANTIATED = ...
    PRES_STEPS = ...
    USER_UNIT = ...
    VP = ...
    AF = ...
    OUTPUT_INTENTS = ...
    D_PART = ...


class FileSpecificationDictionaryEntries:
    """Table 3.41 Entries in a file specification dictionary."""
    Type = ...
    FS = ...
    F = ...
    UF = ...
    DOS = ...
    Mac = ...
    Unix = ...
    ID = ...
    V = ...
    EF = ...
    RF = ...
    DESC = ...
    Cl = ...


class StreamAttributes:
    """
    Table 4.2.
    Table 5 in the 2.0 reference.
    """
    LENGTH = ...
    FILTER = ...
    DECODE_PARMS = ...


@unique
class FilterTypes(StrEnum):
    """§7.4 of the 1.7 and 2.0 references."""
    ASCII_HEX_DECODE = ...
    ASCII_85_DECODE = ...
    LZW_DECODE = ...
    FLATE_DECODE = ...
    RUN_LENGTH_DECODE = ...
    CCITT_FAX_DECODE = ...
    DCT_DECODE = ...
    JPX_DECODE = ...
    JBIG2_DECODE = ...


class FilterTypeAbbreviations:
    """§8.9.7 of the 1.7 and 2.0 references."""
    AHx = ...
    A85 = ...
    LZW = ...
    FL = ...
    RL = ...
    CCF = ...
    DCT = ...


class LzwFilterParameters:
    """
    Table 4.4.
    Table 8 in the 2.0 reference.
    """
    PREDICTOR = ...
    COLORS = ...
    BITS_PER_COMPONENT = ...
    COLUMNS = ...
    EARLY_CHANGE = ...


class CcittFaxDecodeParameters:
    """
    Table 4.5.
    Table 11 in the 2.0 reference.
    """
    K = ...
    END_OF_LINE = ...
    ENCODED_BYTE_ALIGN = ...
    COLUMNS = ...
    ROWS = ...
    END_OF_BLOCK = ...
    BLACK_IS_1 = ...
    DAMAGED_ROWS_BEFORE_ERROR = ...


class ImageAttributes:
    """§11.6.5 of the 1.7 and 2.0 references."""
    TYPE = ...
    SUBTYPE = ...
    NAME = ...
    WIDTH = ...
    HEIGHT = ...
    BITS_PER_COMPONENT = ...
    COLOR_SPACE = ...
    DECODE = ...
    INTENT = ...
    INTERPOLATE = ...
    IMAGE_MASK = ...
    MASK = ...
    S_MASK = ...


class ColorSpaces:
    DEVICE_RGB = ...
    DEVICE_CMYK = ...
    DEVICE_GRAY = ...


class TypArguments:
    """Table 8.2 of the PDF 1.7 reference."""
    LEFT = ...
    RIGHT = ...
    BOTTOM = ...
    TOP = ...


class TypFitArguments:
    """Table 8.2 of the PDF 1.7 reference."""
    XYZ = ...
    FIT = ...
    FIT_H = ...
    FIT_V = ...
    FIT_R = ...
    FIT_B = ...
    FIT_BH = ...
    FIT_BV = ...


class GoToActionArguments:
    S = ...
    D = ...
    SD = ...


class AnnotationDictionaryAttributes:
    """Table 8.15 Entries common to all annotation dictionaries."""
    Type = ...
    Subtype = ...
    Rect = ...
    Contents = ...
    P = ...
    NM = ...
    M = ...
    F = ...
    AP = ...
    AS = ...
    DA = ...
    Border = ...
    C = ...
    StructParent = ...
    OC = ...


class InteractiveFormDictEntries:
    Fields = ...
    NeedAppearances = ...
    SigFlags = ...
    CO = ...
    DR = ...
    DA = ...
    Q = ...
    XFA = ...


class FieldDictionaryAttributes:
    """
    Entries common to all field dictionaries (Table 8.69 PDF 1.7 reference)
    (*very partially documented here*).

    FFBits provides the constants used for `/Ff` from Table 8.70/8.75/8.77/8.79
    """
    FT = ...
    Parent = ...
    Kids = ...
    T = ...
    TU = ...
    TM = ...
    Ff = ...
    V = ...
    DV = ...
    AA = ...
    Opt = ...
    class FfBits(IntFlag):
        """
        Ease building /Ff flags
        Some entries may be specific to:

        * Text (Tx) (Table 8.75 PDF 1.7 reference)
        * Buttons (Btn) (Table 8.77 PDF 1.7 reference)
        * Choice (Ch) (Table 8.79 PDF 1.7 reference)
        """
        ReadOnly = ...
        Required = ...
        NoExport = ...
        Multiline = ...
        Password = ...
        NoToggleToOff = ...
        Radio = ...
        Pushbutton = ...
        Combo = ...
        Edit = ...
        Sort = ...
        FileSelect = ...
        MultiSelect = ...
        DoNotSpellCheck = ...
        DoNotScroll = ...
        Comb = ...
        RadiosInUnison = ...
        RichText = ...
        CommitOnSelChange = ...


    @classmethod
    def attributes(cls) -> Tuple[str, ...]:
        """
        Get a tuple of all the attributes present in a Field Dictionary.

        This method returns a tuple of all the attribute constants defined in
        the FieldDictionaryAttributes class. These attributes correspond to the
        entries that are common to all field dictionaries as specified in the
        PDF 1.7 reference.

        Returns:
            A tuple containing all the attribute constants.

        """
        ...

    @classmethod
    def attributes_dict(cls) -> Dict[str, str]:
        """
        Get a dictionary of attribute keys and their human-readable names.

        This method returns a dictionary where the keys are the attribute
        constants defined in the FieldDictionaryAttributes class and the values
        are their corresponding human-readable names. These attributes
        correspond to the entries that are common to all field dictionaries as
        specified in the PDF 1.7 reference.

        Returns:
            A dictionary containing attribute keys and their names.

        """
        ...



class CheckboxRadioButtonAttributes:
    """Table 8.76 Field flags common to all field types."""
    Opt = ...
    @classmethod
    def attributes(cls) -> Tuple[str, ...]:
        """
        Get a tuple of all the attributes present in a Field Dictionary.

        This method returns a tuple of all the attribute constants defined in
        the CheckboxRadioButtonAttributes class. These attributes correspond to
        the entries that are common to all field dictionaries as specified in
        the PDF 1.7 reference.

        Returns:
            A tuple containing all the attribute constants.

        """
        ...

    @classmethod
    def attributes_dict(cls) -> Dict[str, str]:
        """
        Get a dictionary of attribute keys and their human-readable names.

        This method returns a dictionary where the keys are the attribute
        constants defined in the CheckboxRadioButtonAttributes class and the
        values are their corresponding human-readable names. These attributes
        correspond to the entries that are common to all field dictionaries as
        specified in the PDF 1.7 reference.

        Returns:
            A dictionary containing attribute keys and their names.

        """
        ...



class FieldFlag(IntFlag):
    """Table 8.70 Field flags common to all field types."""
    READ_ONLY = ...
    REQUIRED = ...
    NO_EXPORT = ...


class DocumentInformationAttributes:
    """Table 10.2 Entries in the document information dictionary."""
    TITLE = ...
    AUTHOR = ...
    SUBJECT = ...
    KEYWORDS = ...
    CREATOR = ...
    PRODUCER = ...
    CREATION_DATE = ...
    MOD_DATE = ...
    TRAPPED = ...


class PageLayouts:
    """
    Page 84, PDF 1.4 reference.
    Page 115, PDF 2.0 reference.
    """
    SINGLE_PAGE = ...
    ONE_COLUMN = ...
    TWO_COLUMN_LEFT = ...
    TWO_COLUMN_RIGHT = ...
    TWO_PAGE_LEFT = ...
    TWO_PAGE_RIGHT = ...


class GraphicsStateParameters:
    """Table 58 – Entries in a Graphics State Parameter Dictionary"""
    TYPE = ...
    LW = ...
    LC = ...
    LJ = ...
    ML = ...
    D = ...
    RI = ...
    OP = ...
    op = ...
    OPM = ...
    FONT = ...
    BG = ...
    BG2 = ...
    UCR = ...
    UCR2 = ...
    TR = ...
    TR2 = ...
    HT = ...
    FL = ...
    SM = ...
    SA = ...
    BM = ...
    S_MASK = ...
    CA = ...
    ca = ...
    AIS = ...
    TK = ...


class CatalogDictionary:
    """§7.7.2 of the 1.7 and 2.0 references."""
    TYPE = ...
    VERSION = ...
    EXTENSIONS = ...
    PAGES = ...
    PAGE_LABELS = ...
    NAMES = ...
    DESTS = ...
    VIEWER_PREFERENCES = ...
    PAGE_LAYOUT = ...
    PAGE_MODE = ...
    OUTLINES = ...
    THREADS = ...
    OPEN_ACTION = ...
    AA = ...
    URI = ...
    ACRO_FORM = ...
    METADATA = ...
    STRUCT_TREE_ROOT = ...
    MARK_INFO = ...
    LANG = ...
    SPIDER_INFO = ...
    OUTPUT_INTENTS = ...
    PIECE_INFO = ...
    OC_PROPERTIES = ...
    PERMS = ...
    LEGAL = ...
    REQUIREMENTS = ...
    COLLECTION = ...
    NEEDS_RENDERING = ...
    DSS = ...
    AF = ...
    D_PART_ROOT = ...


class OutlineFontFlag(IntFlag):
    """A class used as an enumerable flag for formatting an outline font."""
    italic = ...
    bold = ...


class PageLabelStyle:
    """
    Table 8.10 in the 1.7 reference.
    Table 161 in the 2.0 reference.
    """
    DECIMAL = ...
    UPPERCASE_ROMAN = ...
    LOWERCASE_ROMAN = ...
    UPPERCASE_LETTER = ...
    LOWERCASE_LETTER = ...


class AnnotationFlag(IntFlag):
    """See §12.5.3 "Annotation Flags"."""
    INVISIBLE = ...
    HIDDEN = ...
    PRINT = ...
    NO_ZOOM = ...
    NO_ROTATE = ...
    NO_VIEW = ...
    READ_ONLY = ...
    LOCKED = ...
    TOGGLE_NO_VIEW = ...
    LOCKED_CONTENTS = ...


PDF_KEYS = ...
class ImageType(IntFlag):
    NONE = ...
    XOBJECT_IMAGES = ...
    INLINE_IMAGES = ...
    DRAWING_IMAGES = ...
    ALL = ...
    IMAGES = ...


_INLINE_IMAGE_VALUE_MAPPING = ...
_INLINE_IMAGE_KEY_MAPPING = ...
