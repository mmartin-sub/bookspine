"""
This type stub file was generated by pyright.
"""

import numpy as np
from typing import List
from torch.utils.data import Dataset
from transformers.pipelines import Pipeline
from keybert.backend import BaseEmbedder

class HFTransformerBackend(BaseEmbedder):
    """Hugging Face transformers model.

    This uses the `transformers.pipelines.pipeline` to define and create
    a feature generation pipeline from which embeddings can be extracted.

    Arguments:
        embedding_model: A Hugging Face feature extraction pipeline

    Usage:
    To use a Hugging Face transformers model, load in a pipeline and point
    to any model found on their model hub (https://huggingface.co/models):

    ```python
    from keybert.backend import HFTransformerBackend
    from transformers.pipelines import pipeline
    hf_model = pipeline("feature-extraction", model="distilbert-base-cased")
    embedding_model = HFTransformerBackend(hf_model)
    ```
    """
    def __init__(self, embedding_model: Pipeline) -> None:
        ...

    def embed(self, documents: List[str], verbose: bool = ...) -> np.ndarray:
        """Embed a list of n documents/words into an n-dimensional matrix of embeddings.

        Arguments:
            documents: A list of documents or words to be embedded
            verbose: Controls the verbosity of the process

        Returns:
            Document/words embeddings with shape (n, m) with `n` documents/words
            that each have an embeddings size of `m`
        """
        ...



class MyDataset(Dataset):
    """Dataset to pass to `transformers.pipelines.pipeline`."""
    def __init__(self, docs) -> None:
        ...

    def __len__(self): # -> int:
        ...

    def __getitem__(self, idx):
        ...
